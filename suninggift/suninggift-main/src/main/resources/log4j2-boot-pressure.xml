<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="OFF" monitorInterval="30">



    <properties>
        <!-- 日志存放目录 -->
        <property name="LOG_HOME">/var/log/java/suninggift</property>
        <!-- 日志前缀名称 -->
        <property name="FILE_NAME">suninggift</property>
    </properties>
    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
        </console>
        <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用-->
        <!-- <File name="log" fileName="log/test.log" append="false">
           <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
        </File> -->
        <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFileInfo" fileName="${LOG_HOME}/${FILE_NAME}_info.log"
                     filePattern="${LOG_HOME}/logs/$${date:yyyy-MM}/info-%d{yyyy-MM-dd HH}-%i.log">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
                <SizeBasedTriggeringPolicy size="100MB"/>
            </Policies>
        </RollingFile>
        <RollingFile name="RollingFileError" fileName="${LOG_HOME}/${FILE_NAME}_error.log"
                     filePattern="${LOG_HOME}/logs/$${date:yyyy-MM}/error-%d{yyyy-MM-dd HH}-%i.log">
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
                <SizeBasedTriggeringPolicy size="100MB"/>
            </Policies>
        </RollingFile>

        <RollingFile name="RollingFileSql" fileName="${LOG_HOME}/${FILE_NAME}_sql.log"
                     filePattern="${LOG_HOME}/logs/$${date:yyyy-MM}/sql-%d{yyyy-MM-dd HH}-%i.log">
            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
                <SizeBasedTriggeringPolicy size="100MB"/>
            </Policies>
        </RollingFile>

        <!-- 日志直接上传到 aliyun -->
        <Loghub name="aliyun-log"
                project="gzlplink-com-sdk-dev"
                logStore="java-log-dev"
                endpoint="cn-beijing-intranet.log.aliyuncs.com"
                accessKeyId="LTAI4FiyeBMhF5GDqdXA5xAp"
                accessKeySecret="NveGNlozvTzG6eztFH2NvDRoHpUguo"
                totalSizeInBytes="104857600"
                maxBlockMs="60000"
                ioThreadCount="8"
                batchSizeThresholdInBytes="524288"
                batchCountThreshold="4096"
                lingerMs="2000"
                retries="10"
                baseRetryBackoffMs="100"
                maxRetryBackoffMs="100"
                topic="suninggift_pressure"
                source="suninggift_pressure"
                timeFormat="yyyy-MM-dd'T'HH:mm:ssZ"
                timeZone="Asia/Shanghai"
                ignoreExceptions="true">
            <PatternLayout
                    pattern="trace: [%traceId] %d{HH:mm:ss.SSS} ${sys:local-ip} %-5level %class{36} %L %M - %msg%xEx"/>
            <Filters>
                <!-- Now deny warn, error and fatal messages -->
                <ThresholdFilter onMismatch="DENY" onMatch="ACCEPT"  level="INFO"/>
                <ThresholdFilter onMismatch="DENY" onMatch="ACCEPT"  level="WARN"/>
                <ThresholdFilter onMismatch="DENY" onMatch="ACCEPT"  level="ERROR"/>
                <ThresholdFilter onMismatch="NEUTRAL" onMatch="DENY"  level="FATAL"/>
            </Filters>
        </Loghub>

    </appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
        <logger name="org.springframework" level="INFO"/>
        <!--<logger name="org.mybatis" level="INFO"/>-->
        <!-- 定义输出日志级别，开发配置 -->


        <!-- 生产配置 -->
        <Root level="INFO">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileInfo"/>
            <appender-ref ref="RollingFileError"/>
            <appender-ref ref="aliyun-log" />
        </Root>

        <!-- 打印sql日志 -->
        <!--<Logger name="java.sql.Connection" level="INFO" additivity="true">-->
        <!--<AppenderRef ref="RollingFileSql" />-->
        <!--</Logger>-->
        <!--<Logger name="java.sql.PreparedStatement" level="DEBUG" additivity="true">-->
        <!--<AppenderRef ref="RollingFileSql" />-->
        <!--</Logger>-->
        <!--<Logger name="cn.stylefeng.guns" level="DEBUG" additivity="true">-->
        <!--<AppenderRef ref="RollingFileSql" />-->
        <!--</Logger>-->
        <!--<Logger name="java.sql.ResultSet" level="DEBUG" additivity="true">-->
        <!--<AppenderRef ref="RollingFileSql" />-->
        <!--</Logger>-->
        <!--<Logger name="java.sql.Statement" level="DEBUG" additivity="true">-->
        <!--<AppenderRef ref="RollingFileSql" />-->
        <!--</Logger>-->

    </loggers>
</configuration>